package io.github.test;

import io.github.sqlconnection.BaseConnection;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import org.json.simple.JSONObject;

import Summary.Summary;

import com.mongodb.DBCursor;
import com.mongodb.DBObject;

public class similarity {
	private static String unlabeled = "unlabel_review";
	private static List<DBObject> reviews = new ArrayList<DBObject>();
	
	public static void main(String[] args) throws IOException{

		BaseConnection bc = new BaseConnection();
		bc.connect();
		bc.showDBs();
		
		bc.setDBAndCollection("cs336", unlabeled);
		
		DBCursor cursor = bc.getCollection(unlabeled).find().limit(7);
		reviews = cursor.toArray();
		
		for(DBObject review: reviews) {
			Summary summary = new Summary(review);
			System.out.println(review.get("review").toString());
			String[] words = review.get("review").toString().split("[\\W]");
			for(String word: words) {
				//
			}
			

		}
		
		// convert to json and print to file
		PrintWriter writer = new PrintWriter("ratings.json", "UTF-8");
		writer.println("[");
		int i=1;
		for(Summary summary: summaries) {
			//System.out.println("-" + summary.getNumNeg() + ", + " + summary.getNumPos());
			//System.out.println(summary.getReview().get("review"));
			//summary.print();
			JSONObject obj=new JSONObject();
			obj.put("id", summary.getReview().get("id"));
			obj.put("review", summary.getReview().get("review"));
			obj.put("category", summary.getRating());
			if(i<500){
				writer.println(obj + ",");
			}
			else writer.println(obj);
			i++;
		}
		System.out.println(summaries.size());
		writer.println("]");
		//System.out.println(summaries.size());
		
		writer.close();
		bc.close();
	}
	
	private static void parse(String negFilename, String posFilename) throws IOException {
		File negFile = new File(negFilename);
		File posFile = new File(posFilename);
		
		FileReader negFR = new FileReader(negFile); 
		BufferedReader br = new BufferedReader(negFR);
		String line;
	    while((line = br.readLine()) != null) {
	    	neg.add(line);
	    }
	    negFR.close();
	    
	    FileReader posFR = new FileReader(posFile);
	    br = new BufferedReader(posFR);
	    while((line = br.readLine()) != null) {
	    	pos.add(line);
	    }
	    posFR.close();
	}
}
